function [Y,Xf,Af] = n6(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 30-Apr-2015 21:39:07.
% 
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-1.80450172967256;-1.33405514623978;-4.5769974633592;-1.5081906789071;-1.72599357952062];
  x1_step1_gain = [0.543968033486943;0.273508963077482;0.328322155370871;0.66304613467353;0.579376431011999];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-0.70681844118920822;-1.2573303163938692;1.101794568851693;-0.74792584269309192;-0.12325622771568906;0.47295197045025977;-0.16785037492337931;1.0434426169419089;0.55659133851677522;1.5755427806599638];
  IW1_1 = [0.32962201058875934 -0.014725915554710808 1.1426443018410026 0.31753130134610891 -0.08318207907310822;0.18700004253426103 0.00027889538108287308 -1.4819271967637861 -0.23539558731258234 -0.33783446577128562;0.38115013987164797 1.1823795411516516 1.6937634670202577 -0.77673921739467677 0.22379497111673935;0.70866107790326827 0.13729757331993439 0.98384641364098246 -0.37628023231958374 0.43236236108797477;-0.31993494893384472 1.1335945697310772 1.3344612433764207 -0.17991761851250648 -0.44565810660774163;-0.28752359539324418 -0.095497678533269625 0.65678085656407215 0.54022571666029495 0.13050514876617716;-0.30207631838019994 -0.3890713091577595 0.4266916473898853 0.10395621562703569 0.059401032526810164;0.0041596097092056221 2.3794440287522587 -0.41891282871240809 -0.29776315348587762 0.11120515694762696;1.0508078070816145 0.42417064575695257 0.048164146890198073 -0.012189654077043581 -0.24575029661854103;0.90773207568558134 0.31846355270967674 0.16151414847744677 -0.2142495935706184 1.0356393276891613];
  
  % Layer 2
  b2 = [-0.63571175608785768;0.015534980211630509;-0.038246085912389413];
  LW2_1 = [0.34147921152055527 -0.74261587948952346 0.020608728926149303 0.081410131469384431 -0.15953962992381604 -0.093872653283133586 -1.0083868618784324 -0.1426926347678236 0.45109995448411982 0.14955963473321168;0.023859681149202179 0.77105984047009257 0.00026449187655469466 0.005472488354214388 0.031666591537304778 0.30368161931881271 -0.3099369745250885 0.21130171930069025 0.10265916896292891 0.071123468582128507;0.24688580482044079 -0.52679702078288926 0.083752625092436597 0.16836447351354372 0.17332080212070544 -0.15890861961409572 0.53165452948062764 -0.076870850860407056 -0.016385613086143037 0.0072215188038184889];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = [0.543851666610474;0.273478764820558;0.328234304536777];
  y1_step1_xoffset = [-1.80509538875021;-1.33433285742553;-4.57739809490106];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
