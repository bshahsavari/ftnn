function [Y,Xf,Af] = myNeuralNetworkFunction3(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 28-Apr-2015 22:35:00.
% 
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
% 
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 5xQ matrix, input #1 at timestep ts.
% 
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 3xQ matrix, output #1 at timestep ts.
% 
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

  % ===== NEURAL NETWORK CONSTANTS =====
  
  % Input 1
  x1_step1_xoffset = [-1.81319402289548;-1.3371616088472;-4.56347149765428;-1.51248651213428;-1.56666923099257];
  x1_step1_gain = [0.542883079867177;0.274257671819404;0.329159319077178;0.660803956060893;0.638296827573774];
  x1_step1_ymin = -1;
  
  % Layer 1
  b1 = [-2.0727457984480058;-0.96201774719321764;-0.20471829266153041;-0.29355420102583446;0.040352369674138452;-0.3879719854919772;0.92746041629868237;0.44337608343674301;-2.9061740056716254;0.55093294119212954];
  IW1_1 = [-0.025569206995253127 1.0781766134645887 0.6376559111069654 1.0935960193675309 0.00064073631473695767;0.34284783091011334 0.12363280422447659 -1.0081278106168075 0.1028903086279308 0.0025677343380689911;0.65191385877480501 0.39904539149034224 0.9618688662699989 -0.085629443734101071 0.18235553952271175;-0.18903954243044663 0.35981242242641404 0.94517493074594294 0.012821881428738415 -0.0023617734835267722;-0.22306507727056946 0.67901739562234398 -0.64354496588050236 -0.57323361550629559 0.11000592713540112;-0.034143769397274308 -1.4217305031327558 -0.34796491580655364 0.961596746693685 -0.10216159195753821;-0.20406542627907154 0.37604770134094934 2.4538636484349361 -0.38674874349721111 -0.011266855037101085;-0.23587462205751472 -1.0251085068290486 -1.8513332429568685 0.031823864454300577 -0.24032798652771911;-0.48764351040569553 0.16335533175640293 -0.92515072995855774 1.4667558956479156 0.29708795188775544;0.61579964241030483 0.1565659678676066 -0.39125423715482277 -0.013443900827899077 0.05515277248566524];
  
  % Layer 2
  b2 = [-0.90857008239626036;-0.19143861574131177;-0.17112059472226643];
  LW2_1 = [0.088209486489231409 -0.6202572960729531 0.08539174055107715 1.3193824805711967 -0.055531876010218972 -0.012962003177856377 -0.11034217921454408 0.47493911798557875 -0.053953794729125398 2.069550034319541;-0.3358976686019019 2.1137600738091509 -0.59817728923456637 0.12340687369881573 -0.27915611749364333 -0.14813156980725761 0.54067983762646188 -0.35232647112308418 -0.42007986309473833 0.65251080649326587;-0.16195711718760841 -2.3479040637817614 0.75509824004452608 1.3754513801822417 0.52585468109485722 0.28406641164947732 -0.5999695584871686 0.67347647506386266 0.88643594147840477 0.14273825245802446];
  
  % Output 1
  y1_step1_ymin = -1;
  y1_step1_gain = [0.545509149004379;0.274022945703588;0.328302380332497];
  y1_step1_xoffset = [-1.79471998360614;-1.33145381333626;-4.57054881645962];
  
  % ===== SIMULATION ========
  
  % Format Input Arguments
  isCellX = iscell(X);
  if ~isCellX, X = {X}; end;
  
  % Dimensions
  TS = size(X,2); % timesteps
  if ~isempty(X)
    Q = size(X{1},2); % samples/series
  else
    Q = 0;
  end
  
  % Allocate Outputs
  Y = cell(1,TS);
  
  % Time loop
  for ts=1:TS
  
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
  end
  
  % Final Delay States
  Xf = cell(1,0);
  Af = cell(2,0);
  
  % Format Output Arguments
  if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
  y = bsxfun(@minus,x,settings_xoffset);
  y = bsxfun(@times,y,settings_gain);
  y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
  x = bsxfun(@minus,y,settings_ymin);
  x = bsxfun(@rdivide,x,settings_gain);
  x = bsxfun(@plus,x,settings_xoffset);
end
